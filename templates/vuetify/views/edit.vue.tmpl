<template>
    <div>
        <div class="listing--container">
            <v-toolbar color="transparent" class="listing-toolbar" flat ml-0>
                <v-btn icon>
                    <v-icon large>{{.Entity.Vuetify.Icon}}</v-icon>
                </v-btn>
                <v-toolbar-title class="ma-0 pa-0">
                    <h2>Edit {{.Entity.Name}}</h2>
                </v-toolbar-title>
                <v-spacer></v-spacer>
                <v-btn mr-0 color="primary" :to="''">
                    <v-icon dark>save</v-icon> Save
                </v-btn>
            </v-toolbar>
        </div>
        <v-card>
            <v-card-text>
                <v-form>
                    <div class="gocipe-form-grid">
                        {{ range .Entity.Fields }}
                        <template v-if="entity">
                            <div class="gocipe-field-container">
                                <v-text-field label="{{ .Label }}" hint="{{ .EditWidget.Type }}" :value="entity.get{{ ucfirst .Property.Name }}() " @change="value=> entity.set{{ ucfirst .Property.Name }}(value)"></v-text-field>
                            </div>
                        </template>
                        {{end}}
                    </div>
                </v-form>
            </v-card-text>
            <v-card-action>
                <v-btn color="primary" @click="update">
                    Save
                    <v-icon right>save</v-icon>
                </v-btn>
            </v-card-action>
        </v-card>
    </div>
</template>


<script>
import { BreadClient } from "@/services/service_bread_pb_service";
import { Get{{ .Entity.Name}}Request } from "@/services/service_bread_pb";
import { Update{{ .Entity.Name}}Request } from "@/services/service_bread_pb";

export default {
  data() {
    return {
      messages: [],
      entity: null,
      loading: false,
      id: null
    };
  },
  mounted() {
    this.id = this.$route.params.id;
    let cli = new BreadClient("/api");
    let req = new Get{{ .Entity.Name}}Request();
    req.setId(this.id);

    this.loading = true;

    cli.get{{ .Entity.Name}}(req, (err, resp) => {
        if (err) {
            console.log(err);
            return;
        }
        this.loading = false;
        this.entity = resp.get{{ucfirst .Entity.Name}}();
    });
  },
  methods: {
      log: function(e) {
          console.log(e)
      },
      update: function() {
          let cli = new BreadClient("/api");
          let req = new Update{{.Entity.Name}}Request();
          req.set{{ ucfirst .Entity.Name}}(this.entity);
          this.loading = true;
          this.debug();

           cli.update{{.Entity.Name}}(req, (err, resp) => {
            if (err) {
                console.log(err);
                this.loading = false;
                return;
            }
        });
      },
      debug: function() {
          {{ range .Entity.Fields }}
          console.log("{{.Property.Name}}", this.entity.get{{ ucfirst .Property.Name }}());
          {{end}}
      }
  }
};
</script>

<style lang="scss" scoped>
.gocipe-form-grid {
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
  display: grid;
  grid-template-columns: 1fr;
  grid-column-gap: var(--gutter, 40px);
  .gocipe-field-container {
    // grid-column: 1/2;
  }
}
</style>
