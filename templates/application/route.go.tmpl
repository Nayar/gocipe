package main

import (
	"net/http"

	"github.com/gorilla/mux"
	"github.com/improbable-eng/grpc-web/go/grpcweb"
	log "github.com/sirupsen/logrus"
)

func newProdRouter(ws *grpcweb.WrappedGrpcServer) *mux.Router {
	router := mux.NewRouter()
	{{if not .Bootstrap.NoGRPCWeb}}
	if ws != nil {
		router.PathPrefix("/api").Handler(http.StripPrefix("/api", ws))
	}
	{{end}}

	{{if .Admin.Generate}}
	if err := web.VueAppRouting(router, "/admin", "admin", nil); err != nil {
		log.Fatalf("Failed to create subroute admin: %s\n", err)
		return nil
	}
	{{end}}

	if err := web.VueAppRouting(router, "/", "app", nil); err != nil {
		log.Fatalf("Failed to create subroute app: %s\n", err)
		return nil
	}

	return router
}

func newDevRouter(ws *grpcweb.WrappedGrpcServer) *mux.Router {
	router := mux.NewRouter()
	{{if not .Bootstrap.NoGRPCWeb}}
	if ws != nil {
		router.PathPrefix("/api").Handler(http.StripPrefix("/api", ws))
	}
	{{end}}

	{{if .Admin.Generate}}
	router.PathPrefix("/media").Handler(http.StripPrefix("/media", http.FileServer(http.Dir("media"))))

	if err := web.DevRouting(router, "/admin", "admin", "8081"); err != nil {
		log.Warnf("Failed to create subrouter backoffice: %s\n", err)
	}
	{{end}}
	
	if err := web.DevRouting(router, "/", "app", "8080"); err != nil {
		log.Warnf("Failed to create subrouter app: %s\n", err)
	}

	return router
}
