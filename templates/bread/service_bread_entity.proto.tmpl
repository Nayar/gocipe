syntax = "proto3";

package {{lower .Entity.Name}};

import "models.proto";
import "bread.proto";
option go_package = "{{.AppImportPath}}/services/bread/{{lower .Entity.Name}}";

service {{.Entity.Name}}Bread {
    {{if .Entity.Bread.Create}}
    // Create allows creation of entity of type {{.Entity.Name}}
    rpc Create(CreateRequest) returns (CreateResponse);
    {{- end}}
    {{if .Entity.Bread.Read}}
    // Get allows getting a single entity of type {{.Entity.Name}}
    rpc Get(bread.GetRequest) returns (GetResponse);
    {{- end}}
    {{if .Entity.Bread.List}}
    // List allows listing all entity of type {{.Entity.Name}}
    rpc List(bread.ListRequest) returns (ListResponse);
    {{- end}}
    {{if .Entity.Bread.Update}}
    // Update allows updating one entity of type {{.Entity.Name}}
    rpc Update(UpdateRequest) returns (UpdateResponse);
    {{- end}}
    {{if .Entity.Bread.Delete}}
    // Delete allows deleting an entity of type {{.Entity.Name}}
    rpc Delete(bread.DeleteRequest) returns (bread.DeleteResponse);
    {{- end}}
    {{if .HasFileFields}}
    // Upload allows uploading of files for entity of type {{.Entity.Name}}
    rpc Upload(bread.UploadRequest) returns (bread.UploadResponse);
    {{end}}
}

{{if .Entity.Bread.Create}}
// CreateRequest represents a request to allow creation of entity of type {{.Entity.Name}}
message CreateRequest {
	string Key = 1;
	models.{{.Entity.Name}} {{.Entity.Name}} = 2;
}
// CreateResponse represents result to a CreateRequest
message CreateResponse {
    models.{{.Entity.Name}} {{.Entity.Name}} = 1;
}
{{- end}}
{{if .Entity.Bread.Read}}
// GetResponse represents result to a GetRequest
message GetResponse {
    models.{{.Entity.Name}} {{.Entity.Name}} = 1;
}
{{- end}}
{{if .Entity.Bread.List}}
// ListResponse represents result to a ListRequest
message ListResponse {
    repeated models.{{.Entity.Name}} {{plural .Entity.Name}} = 1;
}
{{- end}}
{{if .Entity.Bread.Update}}
// UpdateRequest represents a request to allow updating one entity of type {{.Entity.Name}}
message UpdateRequest {
    string Key = 1;
    models.{{.Entity.Name}} {{.Entity.Name}} = 2;
}
// UpdateResponse represents result to an UpdateRequest
message UpdateResponse {
    models.{{.Entity.Name}} {{.Entity.Name}} = 1;
}
{{- end}}